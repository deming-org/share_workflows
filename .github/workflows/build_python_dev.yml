name: python项目编译流程-开发环境

on:
  workflow_call:
    inputs:
      app_name:
        description: '应用名'
        required: true
        type: string
      env:
        description: '环境代号'
        required: true
        type: string
      github-server-url:
        description: '仓库域名，仅针对github仓库'
        default: 'https://github.com'
        required: false
        type: string
      repository:
        description: '仓库名, github仓库时只需要 <组织名>/<仓库名>'
        required: true
        type: string
      ref:
        description: '分支或标签'
        required: true
        type: string
      # 区分svn还是git
      repo_type:
        description: '仓库类型'
        default: 'github'
        required: false
        type: string
    # secrets:
    #   repo_token:
    #     description: '仓库认证令牌'
    #     required: false

# 组成工作流的jobs， 包含一个以上的job
jobs:
  build:
    name: 编译-python项目
    runs-on: ubuntu-latest
    # # 环境级别的配置变量必须指定, 无法使用变量动态配置-2023-12-08
    # environment: dev
    steps:
      - name: 打印变量
        run: |
          echo -e "repo_type=${{ inputs.repo_type }}\trepository=${{ inputs.repository }}\tref=${{ inputs.ref }}"
          echo -e "\033[33m_GITHUB_TOKEN=${{ secrets._GITHUB_TOKEN }}\033[0m"
        
      - name: 拉取代码 - svn仓库
        if: ${{ inputs.repo_type == 'svn' }}
        run: |
          mkdir -pv ${{ inputs.app_name }} && cd ${{ inputs.app_name }}
          svn checkout  --username ${{ secrets.SVN_USER }} --password ${{ secrets.SVN_PWD }} --no-auth-cache ${{ inputs.repository }}/tags/${{ inputs.ref }}
          cd ${{ inputs.ref }}

      - name: 拉取代码 - codeup仓库
        if: ${{ inputs.repo_type == 'codeup' }}
        run: |
          mkdir -pv ${{ inputs.app_name }} && cd ${{ inputs.app_name }}
          git init
          git remote add origin https://${{ secrets.CODEUP_USER }}:${{ secrets._GITHUB_PWD }}@${{ inputs.repository }}.git
          git fetch --depth=1 origin ${{ inputs.ref }} 
          git checkout FETCH_HEAD
        
      - name: 拉取代码 - github仓库
        if: ${{ inputs.repo_type == 'git' }}
        uses: actions/checkout@v4.1.1
        with: 
          github-server-url: ${{ inputs.github-server-url }}
          repository: ${{ inputs.repository == '' && github.repository || inputs.repository }}
          ref: ${{ inputs.ref == '' && github.REF_NAME || inputs.ref }}
          token: ${{ secrets.GH_TOKEN != '' && secrets.GH_TOKEN || github.token }}
          
      - name: 配置编译环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.13'
          
      - name: 安装依赖（测试代码需要）
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install --upgrade pip
          [[ -f requirements.txt ]] && pip install -r requirements.txt
          
      - name: 执行编译
        run: |
          echo -e "job_id：$GITHUB_JOB  事件：$GITHUB_EVENT_NAME  操作人：$GITHUB_ACTOR - $GITHUB_ACTOR_ID"
          echo "workflow链接：$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/workflows/${GITHUB_WORKFLOW}.yml"
          echo -e "本次运行详细链接：$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo -e "配置变量-环境级别：${{ vars.ENV }}"
          pwd && ls -a
          echo -e "\033[36m我是编译脚本，执行完成\033[0m" 
          
      - name: 测试代码
        run: python app.py
        
      - name: 打包压缩
        run: |
          rm -rf .git* .svn*
          tar -zcvf ${{ inputs.app_name }}-${{ inputs.env }}.tgz *
          ls -l ${{ inputs.app_name }}-${{ inputs.env }}.tgz && tar -tzvf ${{ inputs.app_name }}-${{ inputs.env }}.tgz
          
      - name: 上传到artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: ${{ inputs.app_name }}-${{ inputs.env }}
          path: ${{ inputs.app_name }}-${{ inputs.env }}.tgz
          
      - name: 通知
        if: ${{ failure() }}
        env:
          ACTIONS_FEISHU_TAG: 'v1.3.1'
          INPUT_WEBHOOK: ${{ secrets.FS_ROBOT }}
          INPUT_MESSAGE_TYPE: "post"
          INPUT_TITLE: "Workflow 消息通知"
          INPUT_CONTENT: "流水线：${{ github.WORKFLOW }}\n仓库地址: ${{ inputs.github-server-url }}/${{ inputs.repository }}/tree/${{ inputs.ref }}\n发布环境：开发环境\n执行人：${{ github.ACTOR }}\n运行状态：${{ job.status }}"
        run: |
          wget -q https://github.com/xiachufang/actions-feishu/releases/download/${{ env.ACTIONS_FEISHU_TAG }}/linux-amd64-actions-feishu.tar.gz
          tar zxf linux-amd64-actions-feishu.tar.gz feishu
          ./feishu
